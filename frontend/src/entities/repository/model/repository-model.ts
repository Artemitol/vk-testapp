import { z } from "zod"

export const repositoryDTOschema = z.object({
    id: z.number(),
    node_id: z.string(),
    name: z.string(),
    full_name: z.string(),
    private: z.boolean(),
    owner: z.object({
        login: z.string(),
        id: z.number(),
        node_id: z.string(),
        avatar_url: z.string().url(),
        gravatar_id: z.string().nullable(),
        url: z.string().url(),
        html_url: z.string().url(),
        followers_url: z.string().url(),
        following_url: z.string().url(),
        gists_url: z.string().url(),
        starred_url: z.string().url(),
        subscriptions_url: z.string().url(),
        organizations_url: z.string().url(),
        repos_url: z.string().url(),
        events_url: z.string().url(),
        received_events_url: z.string().url(),
        type: z.string(),
        site_admin: z.boolean(),
    }),
    html_url: z.string().url(),
    description: z.string().nullable(),
    fork: z.boolean(),
    url: z.string().url(),
    forks_url: z.string().url(),
    keys_url: z.string().url(),
    collaborators_url: z.string().url(),
    teams_url: z.string().url(),
    hooks_url: z.string().url(),
    issue_events_url: z.string().url(),
    events_url: z.string().url(),
    assignees_url: z.string().url(),
    branches_url: z.string().url(),
    tags_url: z.string().url(),
    blobs_url: z.string().url(),
    git_tags_url: z.string().url(),
    git_refs_url: z.string().url(),
    trees_url: z.string().url(),
    statuses_url: z.string().url(),
    languages_url: z.string().url(),
    stargazers_url: z.string().url(),
    contributors_url: z.string().url(),
    subscribers_url: z.string().url(),
    subscription_url: z.string().url(),
    commits_url: z.string().url(),
    git_commits_url: z.string().url(),
    comments_url: z.string().url(),
    issue_comment_url: z.string().url(),
    contents_url: z.string().url(),
    compare_url: z.string().url(),
    merges_url: z.string().url(),
    archive_url: z.string().url(),
    downloads_url: z.string().url(),
    issues_url: z.string().url(),
    pulls_url: z.string().url(),
    milestones_url: z.string().url(),
    notifications_url: z.string().url(),
    labels_url: z.string().url(),
    releases_url: z.string().url(),
    deployments_url: z.string().url(),
    created_at: z.string().datetime(),
    updated_at: z.string().datetime(),
    pushed_at: z.string().datetime(),
    git_url: z.string().url(),
    ssh_url: z.string(),
    clone_url: z.string().url(),
    svn_url: z.string().url(),
    homepage: z.string().nullable(),
    size: z.number(),
    stargazers_count: z.number(),
    watchers_count: z.number(),
    language: z.string().nullable(),
    has_issues: z.boolean(),
    has_projects: z.boolean(),
    has_downloads: z.boolean(),
    has_wiki: z.boolean(),
    has_pages: z.boolean(),
    has_discussions: z.boolean(),
    forks_count: z.number(),
    mirror_url: z.string().url().nullable(),
    archived: z.boolean(),
    disabled: z.boolean(),
    open_issues_count: z.number(),
    license: z
        .object({
            key: z.string(),
            name: z.string(),
            spdx_id: z.string(),
            url: z.string().url().nullable(),
            node_id: z.string(),
        })
        .nullable(),
    allow_forking: z.boolean(),
    is_template: z.boolean(),
    web_commit_signoff_required: z.boolean(),
    topics: z.array(z.string()),
    visibility: z.string(),
    forks: z.number(),
    open_issues: z.number(),
    watchers: z.number(),
    default_branch: z.string(),
    score: z.number(),
})

export type RepositoryModel = z.infer<typeof repositoryDTOschema>
